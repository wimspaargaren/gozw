// THIS FILE IS AUTO-GENERATED BY ZWGEN
// DO NOT MODIFY

package nodenaming

import (
	"encoding/gob"

	"github.com/wimspaargaren/gozw/cc"
)

const CommandNodeLocationGet cc.CommandID = 0x05

func init() {
	gob.Register(NodeLocationGet{})
	cc.Register(cc.CommandIdentifier{
		CommandClass: cc.CommandClassID(0x77),
		Command:      cc.CommandID(0x05),
		Version:      1,
	}, NewNodeLocationGet)
}

func NewNodeLocationGet() cc.Command {
	return &NodeLocationGet{}
}

// <no value>
type NodeLocationGet struct {
}

func (cmd NodeLocationGet) CommandClassID() cc.CommandClassID {
	return 0x77
}

func (cmd NodeLocationGet) CommandID() cc.CommandID {
	return CommandNodeLocationGet
}

func (cmd NodeLocationGet) CommandIDString() string {
	return "NODE_NAMING_NODE_LOCATION_GET"
}

func (cmd *NodeLocationGet) UnmarshalBinary(data []byte) error {
	// According to the docs, we must copy data if we wish to retain it after returning

	return nil
}

func (cmd *NodeLocationGet) MarshalBinary() (payload []byte, err error) {
	payload = make([]byte, 2)
	payload[0] = byte(cmd.CommandClassID())
	payload[1] = byte(cmd.CommandID())

	return
}
